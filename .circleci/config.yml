version: 2.1

orbs:
  python: circleci/python@1.2
  docker: circleci/docker@2.0.1

jobs:
  lint:
    docker:
      - image: cimg/python:3.8

        auth:
            username: $DOCKERHUB_LOGIN
            password: $DOCKERHUB_PASSWORD

    steps:
      - checkout

      - python/install-packages:
          pkg-manager: pip

      - run:
          name: Run flake8
          command: flake8

  test:
    docker:
      - image: cimg/python:3.8

        auth:
            username: $DOCKERHUB_LOGIN
            password: $DOCKERHUB_PASSWORD

    steps:
      - checkout

      - python/install-packages:
          pkg-manager: pip

      - run:
          name: Run tests
          command: pytest
  
  build:
    docker:
      - image: cimg/python:3.8

        auth:
            username: $DOCKERHUB_LOGIN
            password: $DOCKERHUB_PASSWORD

    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      - run:
          name: Build and push Docker image
          command: |
            docker build -t oc-lettings-build:latest .
            docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
            docker tag oc-lettings-build:latest dylanpecqueux/oc-lettings-build:${CIRCLE_SHA1}
            docker push dylanpecqueux/oc-lettings-build:${CIRCLE_SHA1}
  
  deploy:
    docker:
      - image: cimg/python:3.8

        auth:
            username: $DOCKERHUB_LOGIN
            password: $DOCKERHUB_PASSWORD
    
    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      - run:
          name: Build and push docker image to Heroku
          command: |
            docker login -u $HEROKU_LOGIN -p $HEROKU_API_KEY registry.heroku.com
            docker pull dylanpecqueux/oc-lettings-build:${CIRCLE_SHA1}
            docker tag dylanpecqueux/oc-lettings-build:${CIRCLE_SHA1} registry.heroku.com/$HEROKU_APP_NAME/web
            docker push registry.heroku.com/$HEROKU_APP_NAME/web

workflows:
  test-build:
    jobs:
      - lint

      - test

      - build:
          requires:
              - lint
              - test
          filters:
              branches:
                only: master

      - deploy:
          requires:
            - lint
            - test
            - build
          filters:
            branches:
              only: master
